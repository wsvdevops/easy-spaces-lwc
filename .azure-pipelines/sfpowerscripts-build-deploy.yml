name: Build and Release

trigger:
    - develop
pr: none

stages:
    - stage: QuickBuild
      displayName: QuickBuild
      dependsOn: []
      jobs:
          - job: QuickBuildJob
            displayName: 'Quick Build the packages'
            variables:
                group: DEVHUB
            pool:
                vmImage: 'ubuntu-latest'
            container: dxatscale/sfpowerscripts:latest
            steps:
                - checkout: self
                - task: DownloadSecureFile@1
                  name: devhubKey
                  inputs:
                      secureFile: 'DEVHUB_SERVER_KEY'

                - script: |
                      sfdx auth:jwt:grant -u $(DEVHUB_USERNAME) -i $(DEVHUB_CLIENT_ID) -f $(devhubKey.secureFilePath) -a devhub -r https://login.salesforce.com
                  displayName: 'Authenticate DevHub'

                # In practice, --branch flag should be passed the environment variable for the source branch
                - task: CmdLine@2
                  displayName: 'Build All Packages'
                  inputs:
                      script: 'sfdx sfpowerscripts:orchestrator:quickbuild -v devhub --branch develop_azure'

                - task: PublishBuildArtifacts@1
                  inputs:
                      PathtoPublish: 'artifacts'
                      ArtifactName: 'quickbuild-artifacts'
                      publishLocation: 'Container'

#Utilizes a deployment job to make use of environments feature for exclusive lock
    - stage: Deploy
      displayName: 'Deploy and Validate the packages'
      dependsOn: QuickBuild
      jobs:
          - deployment: deploy
            environment: 'deploy'
            displayName: 'Deploy the packages'
            variables:
              - group: DEVHUB
            pool:
                vmImage: 'ubuntu-latest'
            container: dxatscale/sfpowerscripts:latest
            strategy:
             runOnce:
              deploy:
               steps:
                - checkout: self

                - task: DownloadBuildArtifacts@0
                  inputs:
                      artifactName: 'quickbuild-artifacts'
                      downloadPath: artifacts

                - task: DownloadSecureFile@1
                  name: devhubKey
                  inputs:
                      secureFile: 'DEVHUB_SERVER_KEY'

                - script: |
                      sfdx auth:jwt:grant -u $(DEVHUB_USERNAME) -i $(DEVHUB_CLIENT_ID) -f $(devhubKey.secureFilePath) -a devhub -r https://login.salesforce.com
                  displayName: 'Authenticate DevHub'

                - task: CmdLine@2
                  displayName: 'Create ScratchOrg'
                  inputs:
                      script: 'sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1 -v devhub'

                - task: CmdLine@2
                  displayName: 'Deploy packages to scratch org'
                  inputs:
                      script: 'sfdx sfpowerscripts:orchestrator:deploy -u scratch-org'

                - task: CmdLine@2
                  displayName: 'Delete scratch org'
                  condition: always()
                  inputs:
                      script: 'sfdx force:org:delete -p -u scratch-org'

#Utilizes a deployment job to make use of environments feature for exclusive lock
    - stage: Build
      displayName: 'Build Production Ready Packages'
      dependsOn: Deploy
      jobs:
          - deployment : BuildJob
            environment: build
            displayName: 'Build the packages'
            variables:
                group: DEVHUB
            pool:
                vmImage: 'ubuntu-latest'
            container: dxatscale/sfpowerscripts:latest
            strategy:
             runOnce:
              deploy:
               steps:
                - checkout: self
                - task: DownloadSecureFile@1
                  name: devhubKey
                  inputs:
                      secureFile: 'DEVHUB_SERVER_KEY'

                - script: |
                      sfdx auth:jwt:grant -u $(DEVHUB_USERNAME) -i $(DEVHUB_CLIENT_ID) -f $(devhubKey.secureFilePath) -a devhub -r https://login.salesforce.com
                  displayName: 'Authenticate DevHub'

                # In practice, --branch flag should be passed the environment variable for the source branch
                - task: CmdLine@2
                  displayName: 'Build All Packages'
                  inputs:
                      script: 'sfdx sfpowerscripts:orchestrator:build -v devhub --branch develop_azure'

                - task: PublishBuildArtifacts@1
                  inputs:
                      PathtoPublish: 'artifacts'
                      ArtifactName: 'validated-artifacts'
                      publishLocation: 'Container'

    - stage: Publish
      displayName: "Publish artifacts to NPM registry"
      dependsOn: Build
      jobs:
          - job: PublishJob
            displayName: 'Publish artifacts to NPM registry'
            pool:
                vmImage: 'ubuntu-latest'
            container: dxatscale/sfpowerscripts:latest
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                    artifactName: 'validated-artifacts'
                    downloadPath: 'artifacts'

              - task: DownloadSecureFile@1
                name: npmrc
                inputs:
                  secureFile: .npmrc

              - script: |
                  sfdx sfpowerscripts:orchestrator:publish --npm --scope dxatscale --npmrcpath $(npmrc.secureFilePath)
                displayName: 'Publish artifacts to NPM registry'
